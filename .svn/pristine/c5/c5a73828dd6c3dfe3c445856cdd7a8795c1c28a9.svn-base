using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using KantoorApplicatie.Models;
using System.Drawing.Imaging;
using System.Drawing.Drawing2D;

namespace KantoorApplicatie.Views
{
    public partial class RotatePanel : UserControl
    {
        private Product p;
        private DesignPanel dp;
        int count = 0;
        Bitmap originalImage;

        public RotatePanel(Product p, DesignPanel dp)
        {
            this.p = p;
            this.dp = dp;
            this.originalImage = p.GetImage();
            InitializeComponent();
        }

        private void UpdatePanel()
        {
            dp.Invalidate();
        }

        // Rotate image to the left.
        private void Left_Click(object sender, EventArgs e)
        {
            count -= 10;
            p.image = RotateImage(originalImage, count);
            UpdatePanel();
        }

        // Rotate image to the right.
        private void Right_Click(object sender, EventArgs e)
        {
            count += 10;
            p.image = RotateImage(originalImage, count);
            UpdatePanel();
        }

        // Delete product from the list of products.
        private void Delete_Click(object sender, EventArgs e)
        {
            dp.DeleteProduct(p);
            dp.Controls.Remove(p.rp);
            UpdatePanel();
        }
        
        private Bitmap RotateImage(Bitmap img, float rotationAngle) 
        {
            double c = (int)Math.Sqrt(Math.Pow(img.Size.Width, 2) + Math.Pow(img.Size.Height, 2));

            double smallest = img.Size.Width;
            if (img.Size.Height < smallest) {
                smallest = img.Size.Height;
            }

            double bmWidth = img.Size.Width / 2;
            double bmHeight = img.Size.Width / 2;

            if (smallest < c) {
                double i = c / smallest;
                bmWidth = img.Size.Width * i;
                bmHeight = img.Size.Height * i;
            }

            //create an empty Bitmap image
            Bitmap newImage = new Bitmap((int)bmWidth, (int)bmHeight);
            newImage.SetResolution(originalImage.HorizontalResolution, originalImage.VerticalResolution);

            //turn the Bitmap into a Graphics object
            Graphics gfx = Graphics.FromImage(newImage);

            //now we set the rotation point to the center of our image
            gfx.TranslateTransform((float)newImage.Width / 2, (float)newImage.Height / 2);

            //now rotate the image
            gfx.RotateTransform(rotationAngle);

            gfx.TranslateTransform(-(float)newImage.Width / 2, -(float)newImage.Height / 2);

            //set the InterpolationMode to HighQualityBicubic so to ensure a high
            //quality image once it is transformed to the specified size
            gfx.InterpolationMode = InterpolationMode.HighQualityBicubic;

            //now draw our new image onto the graphics object
            int offsetX = (newImage.Width - img.Width) / 2;
            int offsetY = (newImage.Height - img.Height) / 2;
            gfx.DrawImage(img, new Point(offsetX, offsetY));

            //dispose of our Graphics object
            gfx.Dispose();

            //return the image
            return newImage;
        }

        public void StartRotation() {
            count = 0;
            p.image = RotateImage(originalImage, count);
            UpdatePanel();
        }
    }
}
