using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using KantoorApplicatie.Models;
using System.Drawing.Imaging;
using System.Drawing.Drawing2D;
using KantoorApplicatie.Controllers;

namespace KantoorApplicatie.Views
{
    public partial class RotatePanel : UserControl
    {
        private RotationController rc;
        private Product product;
        private DesignPanel dp;
        public Bitmap originalImage;

        public double bmWidth = 0;
        public double bmHeight = 0;

        public int offsetX;
        public int offsetY;

        private int count = 0;

        public RotatePanel(Product p, DesignPanel dp)
        {
            product = p;
            this.dp = dp;
            originalImage = p.image;
            rc = new RotationController(this);
            InitializeComponent();
        }

        private void UpdatePanel()
        {
            dp.Invalidate();
        }

        // Rotate image to the left.
        private void Left_Click(object sender, EventArgs e)
        {
            count -= 5;
            product.image = rc.RotateImage(originalImage, count);
            UpdatePanel();
        }

        // Rotates image to the right.
        private void Right_Click(object sender, EventArgs e)
        {
            count += 5;
            product.image = rc.RotateImage(originalImage, count);
            UpdatePanel();
        }

        // Deletes product from the list of products.
        private void Delete_Click(object sender, EventArgs e)
        {
            dp.DeleteProduct(product);
            dp.Controls.Remove(product.rp);
            UpdatePanel();
        }

        // Rotates a product by 0 degrees when placed, for consistency.
        public void StartRotation() 
        {
            count = 0;
            product.image = rc.RotateImage(originalImage, count);
            UpdatePanel();
        }

        // Mouse becomes hand when hovering over button.
        private void Button_MouseEnter(object sender, EventArgs e) {
            Cursor = Cursors.Hand;
        }

        // Mouse becomes arrow when not hovering over button.
        private void Button_MouseLeave(object sender, EventArgs e) {
            Cursor = Cursors.Arrow;
        }
    }
}
