using KantoorApplicatie.Views;
using KantoorApplicatie.Models;
using KantoorApplicatie.Models.Theme;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using KantoorApplicatie.Db;
using KantoorApplicatie.Controllers;
using KantoorApplicatie.Models.Invoice;
using KantoorApplicatie.Views.Invoice;
using KantoorApplicatie.Views.InvoiceManager;

namespace KantoorApplicatie.Views
{
    public partial class MainMenu : Form
    {
        public List<Representative> representativeList { get; set; }
        public Representative representative { get; set; }
        MainView mv;

        public MainMenu()
        {
            InitializeComponent();
            // If there is no database, run these.
            DatabaseController.AddProductsFirstRun();
            DatabaseController.AddThemesForTheFirstRun();
            DatabaseController.AddFloorsForFirstRun();
            var mc = new MyContext();
            representativeList = new List<Representative>();
            representativeList = (from s in mc.representatives
                                                    select s).ToList();
            SetBackground(DatabaseController.getLastSubTheme());
            this.mv = new MainView(this);
            mv.Hide();
        }

        // Opens representativeform on first startup. If making a prepresentative is succesful, starts shapeselection.
        private void b_New_Click(object sender, EventArgs e)
        {
            var mc = new MyContext();
            RepresentativeForm rf;
            if (mc.representatives.Count() <= 0) {
                rf = new RepresentativeForm();
                rf.ShowDialog();
                if (rf.representative != null) {
                    representative = rf.representative;
                    mc.representatives.Add(representative);
                    mc.SaveChanges();
                }
            }
            if (mc.representatives.Count() > 0) {
                mv.ShapeSelect();
            }
        }
        // Opens Filebrowser for XML selection.
        private void b_Open_Click(object sender, EventArgs e)
        {
            mv.xml.fromMainMenu = true;
            mv.OpenXML();
        }

        // Opens themeform.
        private void b_Thema_Click(object sender, EventArgs e)
        {
            ThemeForm tf = new ThemeForm(mv, this);
            tf.ShowDialog();
        }

        // Exits program.
        private void b_Close_Click(object sender, EventArgs e)
        {
            Environment.Exit(0);
        }

        // Shows small tips in usage.
        private void l_Help_Click(object sender, EventArgs e)
        {
            MessageBox.Show("U kunt een nieuw ontwerp maken, een eerder ontwerp openen en bewerken of een achtergrond selecteren", "Help", MessageBoxButtons.OK);
        }

        // Exits program with dialog.
        private void MainMenu_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (e.CloseReason == CloseReason.UserClosing)
            {
                DialogResult result = MessageBox.Show("Weet u het zeker?", "Afsluiten", MessageBoxButtons.YesNo);
                if (result == DialogResult.Yes)
                {
                    Application.Exit();
                }
                else
                {
                    e.Cancel = true;
                }
            }
            else
            {
                e.Cancel = true;
            }
        }

        // Removes any existing background.
        public void ClearBackground()
        {
            this.BackgroundImage = null;
        }

        // If a background has been chosen, sets background.
        public void SetBackground(SubTheme st)
            {
            if (st != null)
            {
                this.BackgroundImage = st.GetImage();
                this.BackgroundImageLayout = ImageLayout.Stretch;
            }
        }

        private void representativeButton_Click(object sender, EventArgs e) 
        {

        }

        // Opens invoicemanager.
        private void InvoiceManagerButton_Click(object sender, EventArgs e)
        {
            InvoiceManagerForm imf = new InvoiceManagerForm();
            imf.ShowDialog();
        }
    }
}
